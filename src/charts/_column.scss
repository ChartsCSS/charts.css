@use "../general/variables";

/*
 * Column Chart
 */
.charts-css {

  &.column {

    // Layout
    tbody {
      display: flex;
      justify-content: space-between;
      align-items: stretch;
      width: 100%;
      aspect-ratio: var(--#{ variables.$prefix }aspect-ratio, 21 / 9);

      tr {
        position: relative;

        display: flex;
        justify-content: flex-start;

        // Even row size
        flex-grow: 1;
        flex-shrink: 1;
        flex-basis: 0;
        overflow-wrap: anywhere;

        th {
          position: absolute;
          inset: 0;
          height: var(--#{ variables.$prefix }labels-size);
        }

        td {
          display: flex;
          justify-content: center;
          width: 100%;
          height: calc(100% * var(--#{ variables.$prefix }end, var(--#{ variables.$prefix }size, 1)));
          position: relative; // For tooltips
        }
      }
    }

    // Data position
    &:not(.reverse) {
      tbody {
        tr {
          td {
            align-items: var(--#{ variables.$prefix }data-position, flex-start);

            .data.outside {
              transform: translateY(-100%);
            }
          }
        }
      }
    }
    &.reverse {
      tbody {
        tr {
          td {
            align-items: var(--#{ variables.$prefix }data-position, flex-end);

            .data.outside {
              transform: translateY(100%);
            }
          }
        }
      }
    }

    // Orientation - reverse
    &:not(.reverse) {
      tbody {
        tr {
          align-items: flex-end;

          th {
            justify-content: flex-end;
          }

          td {
            justify-content: center;
          }
        }
      }
    }
    &.reverse {
      tbody {
        tr {
          align-items: flex-start;

          th {
            justify-content: flex-start;
          }

          td {
            justify-content: center;
          }
        }
      }
    }

    // Orientation - reverse labels
    &:not(.reverse-labels) {
      &:not(.reverse) {
        tbody {
          tr {
            margin-block-end: var(--#{ variables.$prefix }labels-size);

            th {
              margin-block-start: auto;
              margin-block-end: calc(-1 * var(--#{ variables.$prefix }labels-size) - var(--#{ variables.$prefix }primary-axis-width));
            }
          }
        }
      }
      &.reverse {
        tbody {
          tr {
            margin-block-start: var(--#{ variables.$prefix }labels-size);

            th {
              margin-block-end: auto;
              margin-block-start: calc(-1 * var(--#{ variables.$prefix }labels-size) - var(--#{ variables.$prefix }primary-axis-width));
            }
          }
        }
      }
    }
    &.reverse-labels {
      &:not(.reverse) {
        tbody {
          tr {
            margin-block-start: var(--#{ variables.$prefix }labels-size);

            th {
              margin-block-end: auto;
              margin-block-start: calc(-1 * var(--#{ variables.$prefix }labels-size));
            }
          }
        }
      }
      &.reverse {
        tbody {
          tr {
            margin-block-end: var(--#{ variables.$prefix }labels-size);

            th {
              margin-block-start: auto;
              margin-block-end: calc(-1 * var(--#{ variables.$prefix }labels-size));
            }
          }
        }
      }
    }

    // Stacked
    &:not(.stacked) {
      tbody {
        tr {
          td {
            // Even cell size
            flex-grow: 1;
            flex-shrink: 1;
            flex-basis: 0;
          }
        }
      }
    }
    &.stacked {
      tbody {
        tr {
          td {
            flex-grow: unset;
            flex-shrink: unset;
            flex-basis: unset;
          }
        }
      }
      &.reverse-datasets {
        tbody {
          tr {
            justify-content: flex-end;
          }
        }
      }
    }

    // Orientation - reverse data
    &:not(.reverse-labels) {
      &:not(.reverse-data) {
        tbody {
          flex-direction: row;
        }
      }
      &.reverse-data {
        tbody {
          flex-direction: row-reverse;
        }
      }
    }
    &.reverse-labels {
      &:not(.reverse-data) {
        tbody {
          flex-direction: row-reverse;
        }
      }
      &.reverse-data {
        tbody {
          flex-direction: row;
        }
      }
    }

    // Orientation - reverse datasets
    &:not(.reverse-datasets) {
      &:not(.stacked) {
        tbody {
          tr {
            flex-direction: row;
          }
        }
      }
      &.stacked {
        &:not(.reverse) {
          tbody {
            tr {
              flex-direction: column-reverse;
            }
          }
        }
        &.reverse {
          tbody {
            tr {
              flex-direction: column;
            }
          }
        }
      }
    }
    &.reverse-datasets {
      &:not(.stacked) {
        tbody {
          tr {
            flex-direction: row-reverse;
          }
        }
      }
      &.stacked {
        &:not(.reverse) {
          tbody {
            tr {
              flex-direction: column;
            }
          }
        }
        &.reverse {
          tbody {
            tr {
              flex-direction: column-reverse;
            }
          }
        }
      }
    }

    // Spacing
    @for $i from 1 through 20 {
      &.data-spacing-#{ $i } {
        tbody {
          tr {
            padding-inline-start: $i * 1px;
            padding-inline-end: $i * 1px;
          }
        }
      }
    }
    @for $i from 1 through 20 {
      &.datasets-spacing-#{ $i } {
        tbody {
          tr {
            td {
              margin-inline-start: $i * 1px;
              margin-inline-end: $i * 1px;
            }
          }
        }
      }
    }
  }
}
